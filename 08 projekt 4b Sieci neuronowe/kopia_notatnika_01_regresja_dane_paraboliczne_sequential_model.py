# -*- coding: utf-8 -*-
"""Kopia notatnika 01 regresja dane paraboliczne_sequential_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yihp4sgCPLzB6_W0Xqte2UVaWwnNTF-r
"""

import numpy as np
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import Dense
from keras.callbacks import EarlyStopping

# Generowanie danych losowych - trend paraboliczny
np.random.seed(0)
X = np.random.rand(100, 1)  # Generowanie 100 punktów losowych danych X
X = np.sort(X, axis=0) #sortuje macierz X wzdłuż osi 0, co oznacza sortowanie wzdłuż kolumn. Jeśli chcesz posortować wzdłuż wierszy, użyj axis=1.
y = 4*(X-0.5)**2 + np.random.randn(100, 1) * 0.01  # Generowanie danych y = 2X + 1 + szum

# Definiowanie modelu
model = Sequential()
'''do uzupelnienia'''  # Warstwa ukryta z 10 neuronami i funkcją aktywacji ReLU
'''do uzupelnienia'''  # Warstwa ukryta
'''do uzupelnienia'''  # Warstwa wyjściowa z jednym neuronem, brak funkcji aktywacji

# podsumowanie modelu
model.summary()

# Kompilacja modelu
model.compile(optimizer='adam', loss='mean_squared_error')  # Kompilacja modelu z optymalizatorem SGD i funkcją straty MSE

# Trenowanie modelu
early_stopping = '''do uzupelnienia'''
history = '''do uzupelnienia'''

# Przewidywanie na danych treningowych
predictions = model.predict(X)  # Wygenerowanie przewidywań modelu dla danych X

# Wykres danych treningowych i przewidywań modelu
plt.scatter(X, y, color='blue', label='Dane treningowe')  # Wykres danych treningowych
plt.plot(X, predictions, color='red', linewidth=3, label='Przewidywania modelu')  # Wykres przewidywań modelu
plt.xlabel('X')  # Etykieta osi X
plt.ylabel('y')  # Etykieta osi Y
plt.title('Regresja liniowa przy użyciu Keras')  # Tytuł wykresu
plt.legend()  # Dodanie legendy
plt.show()  # Wyświetlenie wykresu

# Wykres MSE vs epoki
plt.plot(history.history['loss'], label='MSE (training data)')
plt.title('Mean Squared Error (MSE) vs Epochs')
plt.ylabel('MSE')
plt.xlabel('Epoch')
plt.legend(loc="upper right")
plt.show()