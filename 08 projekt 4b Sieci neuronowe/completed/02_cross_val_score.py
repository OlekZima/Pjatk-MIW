# -*- coding: utf-8 -*-
"""02 cross_val_score.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SbPZiFXC36TF281higH6_JuseLz3w1Qr
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import KFold
from keras.models import Sequential
from keras.layers import Dense
import tensorflow as tf

# Generowanie danych losowych - trend paraboliczny
np.random.seed(0)
X = np.random.rand(100, 1)
y = 4*(X-0.5)**2 + np.random.randn(100, 1) * 0.01

def create_model():
    model = Sequential([
        Dense(10, input_shape=(1,), activation='relu'),
        Dense(10, activation='relu'),
        Dense(1)
    ])
    model.compile(optimizer='adam', loss='mean_squared_error')
    return model

# Walidacja krzy≈ºowa
kf = KFold(n_splits=5)
mse_scores = []

for train_index, test_index in kf.split(X):
    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = y[train_index], y[test_index]
    model = create_model()
    model.fit(X_train, y_train, epochs=200, verbose=0)
    mse = model.evaluate(X_test, y_test, verbose=0)
    mse_scores.append(mse)

print("Mean MSE for each fold:", [round(score, 3) for score in mse_scores])